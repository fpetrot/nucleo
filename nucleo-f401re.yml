platforms:
  nucleo-f401re:
    description: Affordable and flexible platform to ease prototyping using a STM32F401RET6 microcontroller, according to the salesman :-)

    components:
      mem-bus:
        type: simple-bus

      cpu:
        type: cpu-arm-cortex-m4
        bindings:
          mem: mem-bus
          nvic-link: nvic.link

      nvic:
        type: arm-nvic
        # num-irq: 52 # According to page 201 of DocID025350 Rev 4    #Yes but no, 52 maskable for a total of  84
        num-irq: 84 # According to page 201 of DocID025350 Rev 4
        bindings:
          mem:
            peer: mem-bus
            address: { 0xe000e000: 0x1000 }
          irq-out: cpu.irq

      syscfg:
        type: nucleo-syscfg
        bindings:
          mem:
            peer: mem-bus
            address: {0x40013800: 0x1000}
          to-exti:
            peer: exti.from-syscfg

      exti:
        type: nucleo-exti
        bindings:
          mem:
            peer: mem-bus
            address: { 0x40013C00: 0x1000}
          # Gpios Connections
          gpios-a:
            peer: gpio-a.gpios
          gpios-b:
            peer: gpio-b.gpios
          gpios-c:
            peer: gpio-c.gpios
          gpios-d:
            peer: gpio-d.gpios
          gpios-e:
            peer: gpio-e.gpios
          gpios-h:
            peer: gpio-h.gpios
          # IRQ Connections
          irq0:
            peer: nvic.irq6
          irq1:
            peer: nvic.irq7
          irq2:
            peer: nvic.irq8
          irq3:
            peer: nvic.irq9
          irq4:
            peer: nvic.irq10
          irq5:
            peer: nvic.irq23
          irq6:
            peer: nvic.irq23
          irq7:
            peer: nvic.irq23
          irq8:
            peer: nvic.irq23
          irq9:
            peer: nvic.irq23
          irq10:
            peer: nvic.irq40
          irq11:
            peer: nvic.irq40
          irq12:
            peer: nvic.irq40
          irq13:
            peer: nvic.irq40
          irq14:
            peer: nvic.irq40
          irq15:
            peer: nvic.irq40

      # stub to prevent bus error when exiting an irq
      irq-mem:
        type: stub
        bindings:
          mem:
            peer: mem-bus
            address: { 0xfffffff0: 0x10}

      # stub to prevent bus error when mbed use RCC aliased regions
      alias-rcc-mem:
        type: stub
        bindings:
          mem:
            peer: mem-bus
            address: { 0x42470000: 0x100}

      # DBGMCU stup
      dbgmcu:
        type: stub
        bindings:
          mem:
            peer: mem-bus
            address: { 0xE0042000: 0x1000 }


      usart1:
        type: uart-usart
        fclk: 84000000    #usart 1 is on APB2, f=84Mhz
        bindings:
          mem:
            peer: mem-bus
            address: { 0x40011000: 0x1C }
          irq: nvic.irq37
          usart-tx:   usart1-tester.usart-rx
          usart-rx:   usart1-tester.usart-tx
          usart-sclk: usart1-tester.usart-sclk
          usart-nCTS: usart1-tester.usart-nRTS
          usart-nRTS: usart1-tester.usart-nCTS


      usart1-tester:
        type: usart-tester
        sampling_time: 13017  #approximately sampling time for 9600. Sampling method should work well even with shifting in sampling time calculation
        M: 0
        OVER8: 1
        stop_bit: 2
        PCE: 0
        PS: 0

      usart2:
        type: uart-usart
        bindings:
          mem:
            peer: mem-bus
            address: { 0x40004400: 0x1C }
          irq: nvic.irq38
          usart-tx:   usart2-tester.usart-rx
          usart-rx:   usart2-tester.usart-tx
          usart-sclk: usart2-tester.usart-sclk
          usart-nCTS: usart2-tester.usart-nRTS
          usart-nRTS: usart2-tester.usart-nCTS


      usart2-tester:
        type: usart-tester
        sampling_time: 13041
        M: 0
        OVER8: 1
        stop_bit: 2
        PCE: 0
        PS: 0
        sending: true

      usart6:
        type: uart-usart
        bindings:
          mem:
            peer: mem-bus
            address: { 0x40011400: 0x400 }
          irq: nvic.irq71
          usart-tx:   usart6-tester.usart-rx
          usart-rx:   usart6-tester.usart-tx
          usart-sclk: usart6-tester.usart-sclk
          usart-nCTS: usart6-tester.usart-nRTS
          usart-nRTS: usart6-tester.usart-nCTS


      usart6-tester:
        type: usart-tester
        sampling_time: 13041
        M: 0
        OVER8: 1
        stop_bit: 2
        PCE: 0
        PS: 0


      flash-native:
        type: memory
        size: &flash_size 512K
        bindings:
          mem:
            peer: mem-bus
            address: { &flash_start 0x08000000 : *flash_size }
        readonly: true


      # Flash memory for flash boot mode. MUST BE THE SAME THAN FLASH-NATIVE ( identic file-blob )
      flash-boot:
        type: memory
        size: *flash_size
        bindings:
          mem:
            peer: mem-bus
            address: { 0x0000000: *flash_size }
        readonly: true



      # Flash-interface Stub
      flash-interface:
        type: stub
        size: &flash_interface_size 1K
        bindings:
          mem:
            peer: mem-bus
            address: { 0x40023C00: *flash_interface_size }


      RCC:
        type: nucleo-rcc
        bindings:
          mem:
            peer: mem-bus
            address: { 0x40023800: 0x400 }


      # PWR stub
      PWR:
        type: stub
        size: &PWR_size 1K
        bindings:
          mem:
            peer: mem-bus
            address: { 0x40007000: *PWR_size }


      sram:
        type: memory
        size: &sram_size 96K
        bindings:
          mem:
            peer: mem-bus
            address: { &sram_start 0x20000000: *sram_size }


      ## TIMERS
      tim-2:
       type: nucleo-timer
       timer-size: 32
       log-level: info
       bindings:
         mem:
           peer: mem-bus
           address: { 0x40000000: 0x400 }
         irq: nvic.irq28

      tim-3:
       type: nucleo-timer
       log-level: info
       bindings:
         mem:
           peer: mem-bus
           address: { 0x40000400: 0x400 }
         irq: nvic.irq29

      tim-4:
       type: nucleo-timer
       log-level: info
       bindings:
         mem:
           peer: mem-bus
           address: { 0x40000800: 0x400 }
         irq: nvic.irq30

      tim-5:
       type: nucleo-timer
       log-level: info
       timer-size: 32
       bindings:
         mem:
           peer: mem-bus
           address: { 0x40000C00: 0x400 }
         irq: nvic.irq50

      #
      #
      # syscfg:
      #   type: nucleo-syscfg
      #   bindings:
      #     mem:
      #       peer: mem-bus
      #       address: { 0x40013800: 0x400}


      gpio-a:
        type: rm0368-gpio
        moder: 0x0C000000
        ospeedr: 0x0C000000
        pupdr: 0x64000000
        bindings:
          mem:
            peer: mem-bus
            address: { 0x40020000: 0x400 }

      gpio-b:
        type: rm0368-gpio
        moder: 0x00000280
        ospeedr: 0x000000C0
        pupdr: 0x00000100
        bindings:
          mem:
            peer: mem-bus
            address: { 0x40020400: 0x400 }

      gpio-c:
        type: rm0368-gpio
        bindings:
          mem:
            peer: mem-bus
            address: { 0x40020800: 0x400 }

      gpio-d:
        type: rm0368-gpio
        bindings:
          mem:
            peer: mem-bus
            address: { 0x40020C00: 0x400 }

      gpio-e:
        type: rm0368-gpio
        bindings:
          mem:
            peer: mem-bus
            address: { 0x40021000: 0x400 }

      gpio-h:
        type: rm0368-gpio
        bindings:
          mem:
            peer: mem-bus
            address: { 0x40021C00: 0x400 }


      # Tests components
      led1:
        type: led
        bindings:
          pin:
            peer: gpio-a.gpios5

      led2:
        type: led
        bindings:
          pin:
            peer: gpio-a.gpios0


      switch1:
        type: switch
        bindings:
          pout: gpio-c.gpios13
